#!/usr/bin/env bash

# Purpose:
# Install or remove development tools based on user selection.

set -euxo pipefail

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –û–°
OS=$(uname -s)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
if [[ "$OS" == "Darwin" ]]; then
  PACKAGE_MANAGER="brew"
elif command -v apt >/dev/null; then
  PACKAGE_MANAGER="apt"
elif command -v dnf >/dev/null; then
  PACKAGE_MANAGER="dnf"
elif command -v pacman >/dev/null; then
  PACKAGE_MANAGER="pacman"
else
  echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä."
  exit 1
fi

# –°–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏/—É–¥–∞–ª–µ–Ω–∏—è
PACKAGES=("zsh" "bat" "shellcheck" "btop" "coreutils" "tmux" "neovim" "zsh-syntax-highlighting")

# –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è Linux
if [[ "$OS" == "Linux" ]]; then
  PACKAGES+=("inetutils-traceroute" "inetutils-telnet" "inetutils-ftp" "inetutils-ping" "tftpd-hpa")
elif [[ "$OS" == "Darwin" ]]; then
  PACKAGES+=("inetutils")
fi

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
install_packages() {
  if [[ "$OS" == "Darwin" ]]; then
    if ! command -v brew >/dev/null; then
      echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Homebrew..."
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
      eval "$(/opt/homebrew/bin/brew shellenv)"
      brew cleanup --prune=all
    fi
  fi

  echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã..."
  for package in "${PACKAGES[@]}"; do
    if command -v "$package" >/dev/null 2>&1; then
      echo "‚úÖ $package —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
    else
      if [[ "$PACKAGE_MANAGER" == "brew" ]]; then
        brew install "$package"
      elif [[ "$PACKAGE_MANAGER" == "apt" ]]; then
        sudo apt update && sudo apt install -y "$package"
      elif [[ "$PACKAGE_MANAGER" == "dnf" ]]; then
        sudo dnf install -y "$package"
      elif [[ "$PACKAGE_MANAGER" == "pacman" ]]; then
        sudo pacman -S --noconfirm "$package"
      fi
    fi
  done

  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ FVM
  if ! command -v fvm >/dev/null; then
    if [[ "$PACKAGE_MANAGER" == "brew" ]]; then
      brew tap leoafarias/fvm
      brew install fvm
    else
      echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º FVM..."
      curl -fsSL https://fvm.app/install.sh | bash
      echo 'export PATH="$HOME/.pub-cache/bin:$PATH"' >>~/.zshrc
      export PATH="$HOME/.pub-cache/bin:$PATH"
    fi
  else
    echo "‚úÖ FVM —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
  fi
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–æ–≤
remove_packages() {
  echo "üóë –£–¥–∞–ª—è–µ–º –ø–∞–∫–µ—Ç—ã..."
  for package in "${PACKAGES[@]}"; do
    if command -v "$package" >/dev/null 2>&1; then
      if [[ "$PACKAGE_MANAGER" == "brew" ]]; then
        brew uninstall --ignore-dependencies "$package"
      elif [[ "$PACKAGE_MANAGER" == "apt" ]]; then
        sudo apt remove -y "$package"
      elif [[ "$PACKAGE_MANAGER" == "dnf" ]]; then
        sudo dnf remove -y "$package"
      elif [[ "$PACKAGE_MANAGER" == "pacman" ]]; then
        sudo pacman -Rns --noconfirm "$package"
      fi
    else
      echo "‚ùå $package –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º..."
    fi
  done
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ZSH-–ø–ª–∞–≥–∏–Ω–æ–≤
install_zsh_plugins() {
  install_or_update_zsh_plugin() {
    if [ -d ~/.zsh/"${2}" ]; then
      cd ~/.zsh/"${2}"
      git pull
      cd -
      return
    fi
    git clone "${1}" "${HOME}/.zsh/${2}"
  }

  echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ZSH –ø–ª–∞–≥–∏–Ω—ã..."
  install_or_update_zsh_plugin https://github.com/MichaelAquilina/zsh-you-should-use.git zsh-you-should-use
  install_or_update_zsh_plugin https://github.com/zsh-users/zsh-syntax-highlighting.git zsh-syntax-highlighting
  install_or_update_zsh_plugin https://github.com/zsh-users/zsh-autosuggestions.git zsh-autosuggestions
  install_or_update_zsh_plugin https://github.com/fdellwing/zsh-bat.git zsh-bat
  install_or_update_zsh_plugin https://gist.github.com/5013acf2cd5b28e55036c82c91bd56d8.git adb-commands

  if ! grep -q "source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ~/.zshrc; then
    echo 'source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh' >>~/.zshrc
  fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Finder –¥–ª—è macOS
configure_macos() {
  echo "‚öôÔ∏è –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Finder..."
  defaults write NSGlobalDomain AppleShowAllExtensions -bool true
  defaults write com.apple.Finder AppleShowAllFiles -bool true
  defaults write com.apple.Finder NewWindowTarget -string "PfHm"
  defaults write com.apple.Finder NewWindowTargetPath -string "file:///Users/${USER}/"
  defaults write com.apple.Finder ShowStatusBar -bool false
  defaults write com.apple.Finder _FXShowPosixPathInTitle -bool true
  defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
  defaults write com.apple.finder ShowPathbar -bool true
  defaults write com.apple.finder _FXSortFoldersFirst -bool true
  killall Finder

  # –†–∞–∑—Ä–µ—à–∏—Ç—å –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∫–ª–∞–≤–∏—à
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
}

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ macOS –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ
restore_macos_defaults() {
  echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ macOS..."
  defaults delete NSGlobalDomain AppleShowAllExtensions || true
  defaults delete com.apple.Finder AppleShowAllFiles || true
  defaults delete com.apple.Finder NewWindowTarget || true
  defaults delete com.apple.Finder NewWindowTargetPath || true
  defaults delete com.apple.Finder ShowStatusBar || true
  defaults delete com.apple.Finder _FXShowPosixPathInTitle || true
  defaults delete com.apple.finder FXEnableExtensionChangeWarning || true
  defaults delete com.apple.finder ShowPathbar || true
  defaults delete com.apple.finder _FXSortFoldersFirst || true
  killall Finder

  # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫–ª–∞–≤–∏—à
  defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool true
}

# –ì–ª–∞–≤–Ω—ã–π –±–ª–æ–∫: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç
if [[ "$#" -ne 1 ]]; then
  echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 --install | -i | --clean | -c"
  exit 1
fi

case "$1" in
--install | -i)
  echo "üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
  install_packages
  install_zsh_plugins
  [[ "$OS" == "Darwin" ]] && configure_macos
  echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
  ;;
--clean | -c)
  echo "üóë –ó–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏..."
  remove_packages
  [[ "$OS" == "Darwin" ]] && restore_macos_defaults
  echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
  ;;
*)
  echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: $0 --install | -i | --clean | -c"
  exit 1
  ;;
esac
