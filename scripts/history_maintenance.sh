#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ zsh
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./history_maintenance.sh [–æ–ø—Ü–∏—è]

set -euo pipefail

HISTFILE="${HOME}/.dotfiles/.zsh_history"
BACKUP_DIR="${HOME}/.dotfiles/history_backups"
MAX_BACKUPS=10

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
backup_history() {
    print_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏..."
    
    if [[ ! -f "$HISTFILE" ]]; then
        print_error "–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $HISTFILE"
        return 1
    fi
    
    mkdir -p "$BACKUP_DIR"
    local backup_file="$BACKUP_DIR/zsh_history_$(date +%Y%m%d_%H%M%S).bak"
    
    cp "$HISTFILE" "$backup_file"
    print_success "–†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_file"
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
    cleanup_old_backups
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
cleanup_old_backups() {
    print_info "–û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
    
    if [[ ! -d "$BACKUP_DIR" ]]; then
        return 0
    fi
    
    local backup_count=$(ls -1 "$BACKUP_DIR"/zsh_history_*.bak 2>/dev/null | wc -l)
    
    if [[ $backup_count -gt $MAX_BACKUPS ]]; then
        local files_to_delete=$((backup_count - MAX_BACKUPS))
        ls -1t "$BACKUP_DIR"/zsh_history_*.bak | tail -n "$files_to_delete" | xargs rm -f
        print_info "–£–¥–∞–ª–µ–Ω–æ $files_to_delete —Å—Ç–∞—Ä—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"
    fi
}

# –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏
deduplicate_history() {
    print_info "–î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏..."
    
    if [[ ! -f "$HISTFILE" ]]; then
        print_error "–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $HISTFILE"
        return 1
    fi
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –ø–µ—Ä–µ–¥ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–µ–π
    backup_history
    
    # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    local temp_file=$(mktemp)
    
    # –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø–æ—Ä—è–¥–∫–∞ (–ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ)
    tac "$HISTFILE" | awk '!seen[$0]++' | tac > "$temp_file"
    
    # –ü–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    local original_lines=$(wc -l < "$HISTFILE")
    local new_lines=$(wc -l < "$temp_file")
    local removed_lines=$((original_lines - new_lines))
    
    # –ó–∞–º–µ–Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    mv "$temp_file" "$HISTFILE"
    
    print_success "–î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —É–¥–∞–ª–µ–Ω–æ $removed_lines –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –∏–∑ $original_lines –∫–æ–º–∞–Ω–¥"
}

# –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
clean_history() {
    print_warning "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç –∏—Å—Ç–æ—Ä–∏—é –∫–æ–º–∞–Ω–¥!"
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã? (y/N): " -n 1 -r
    echo
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        backup_history
        echo "" > "$HISTFILE"
        print_success "–ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞"
    else
        print_info "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
    fi
}

# –ê–Ω–∞–ª–∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
analyze_history() {
    print_info "–ê–Ω–∞–ª–∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥..."
    
    if [[ ! -f "$HISTFILE" ]]; then
        print_error "–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $HISTFILE"
        return 1
    fi
    
    local total_commands=$(wc -l < "$HISTFILE")
    print_info "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥: $total_commands"
    
    echo ""
    print_info "–¢–æ–ø-10 —Å–∞–º—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–∞–Ω–¥:"
    awk '{print $1}' "$HISTFILE" | sort | uniq -c | sort -nr | head -10
    
    echo ""
    print_info "–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –∏—Å—Ç–æ—Ä–∏–∏:"
    ls -lh "$HISTFILE" | awk '{print $5}'
}

# –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
show_stats() {
    print_info "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∫–æ–º–∞–Ω–¥:"
    
    if [[ ! -f "$HISTFILE" ]]; then
        print_error "–§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $HISTFILE"
        return 1
    fi
    
    echo "üìÅ –§–∞–π–ª –∏—Å—Ç–æ—Ä–∏–∏: $HISTFILE"
    echo "üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥: $(wc -l < "$HISTFILE")"
    echo "üíæ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(ls -lh "$HISTFILE" | awk '{print $5}')"
    echo "üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: $(ls -l "$HISTFILE" | awk '{print $6, $7, $8}')"
    
    if [[ -d "$BACKUP_DIR" ]]; then
        local backup_count=$(ls -1 "$BACKUP_DIR"/zsh_history_*.bak 2>/dev/null | wc -l)
        echo "üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: $backup_count"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
show_help() {
    echo "–°–∫—Ä–∏–ø—Ç –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ zsh"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞]"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  backup      –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∏—Å—Ç–æ—Ä–∏–∏"
    echo "  dedupe      –£–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏"
    echo "  clean       –ü–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"
    echo "  analyze     –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é"
    echo "  stats       –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
    echo "  help        –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è."
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    case "${1:-dedupe}" in
        backup)
            backup_history
            ;;
        dedupe)
            deduplicate_history
            ;;
        clean)
            clean_history
            ;;
        analyze)
            analyze_history
            ;;
        stats)
            show_stats
            ;;
        help|--help|-h)
            show_help
            ;;
        *)
            print_error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"
